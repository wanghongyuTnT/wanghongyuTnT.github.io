{"meta":{"title":"Hexo","subtitle":"","description":"","author":"王鸿雨","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"条件查询","date":"2022-10-31T14:46:56.820Z","updated":"2022-10-19T07:00:42.915Z","comments":true,"path":"2022/10/31/条件查询/","link":"","permalink":"http://example.com/2022/10/31/%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/","excerpt":"","text":"1、按条件查询 123456789//按条件查询 @Test void getALL()&#123; QueryWrapper qw =new QueryWrapper(); qw.lt(&quot;id&quot;,4); List&lt;User&gt; userList = userMapper.selectList(qw); System.out.println(userList); &#125; 2、lambda按条件查询查询 123456789//按lambda格式条件查询@Testvoid LambdagetALL()&#123; QueryWrapper &lt;User&gt; qw =new QueryWrapper&lt;User&gt;(); qw.lambda().lt(User::getId,3); List&lt;User&gt; userList = userMapper.selectList(qw); System.out.println(userList);&#125; 3、lambda按条件查询 12345678//lambda格式按条件查询@Test void lambdaGetall()&#123; LambdaQueryWrapper&lt;User&gt; lqw =new LambdaQueryWrapper&lt;&gt;(); lqw.lt(User::getId,6); //lt小于 gt大于 le小于等于 ge大于等于 List&lt;User&gt; userList = userMapper.selectList(lqw); System.out.println(userList);&#125; 4、","categories":[],"tags":[]},{"title":"Mybaits环境配置","slug":"环境配置 ","date":"2022-10-31T12:15:09.000Z","updated":"2022-10-31T14:49:55.008Z","comments":true,"path":"2022/10/31/环境配置 /","link":"","permalink":"http://example.com/2022/10/31/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%20/","excerpt":"","text":"MyBatis-Plus入门 MyBatis-Plus官网：https://baomidou.com/ 1、开发环境 IDE：idea 2019.2 JDK：JDK8+ 构建工具：maven 3.5.4 MySQL版本：MySQL 5.7 Spring Boot：2.6.3 MyBatis-Plus：3.5.1 2、创建数据库和表 创建数据库 123456789`DROP TABLE IF EXISTS tb_user;``CREATE TABLE tb_user (` `id int NOT NULL AUTO_INCREMENT,` `username varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,` `password varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,` `gender char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,` `addr varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,` `PRIMARY KEY (id) USING BTREE``) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;` 插入数据 1234567INSERT INTO tb_user VALUES (1, &#x27;zhangsan&#x27;, &#x27;123&#x27;, &#x27;男&#x27;, &#x27;北京&#x27;);``INSERT INTO tb_user VALUES (3, &#x27;王五&#x27;, &#x27;11&#x27;, &#x27;男&#x27;, &#x27;西安&#x27;);``INSERT INTO tb_user VALUES (100, &#x27;王鸿雨&#x27;, NULL, NULL, &#x27;永州&#x27;);``SET FOREIGN_KEY_CHECKS = 1;`` 3、创建模块，导入坐标 在pom.xml当中添加dependency** 123456789101112131415161718192021222324252627282930313233343536&lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis&lt;/artifactId&gt; &lt;version&gt;3.5.5&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.44&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.12&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;1.7.21&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-classic&lt;/artifactId&gt; &lt;version&gt;1.2.3&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-core&lt;/artifactId&gt; &lt;version&gt;1.2.3&lt;/version&gt;&lt;/dependency&gt; 4、创建application.yml,完成相关配置 12345678910111213141516171819202122server: port: 8080mybatis: config-location: classpath:mybatis/mybatis-config.xml mapper-locations: classpath:mybatis/mapper/*.xml configuration: map-underscore-to-camel-case: truespring: datasource: driver-class-name: com.mysql.cj.jdbc.Driver url: jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC username: root password: 123456 main: banner-mode: offmybatis-plus: configuration: log-impl: org.apache.ibatis.logging.stdout.StdOutImpl global-config: banner: false 5、创建实体类，并且使用Lombok 123456789@Data@TableName(&quot;tb_user&quot;)public class User &#123; private int id; private String username; private String password; private String addr;&#125; 6、创建mapper接口并扫描 UserMapper.java 接口 1234@Repository //将类或接口标识为持久层组件public interface UserMapper extends BaseMapper&lt;User&gt; &#123;&#125; 7、Application启动类 12345678910@SpringBootApplication@MapperScan(&quot;wanghongyu.mapper&quot;)public class SpringbootProjectApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringbootProjectApplication.class, args); System.out.println(&quot;启动成功&quot;); &#125;&#125; 8、YML配置文件 123456789101112131415161718192021server: port: 8080 //端口号mybatis: config-location: classpath:mybatis/mybatis-config.xml //xml文件地址 mapper-locations: classpath:mybatis/mapper/*.xml configuration: map-underscore-to-camel-case: truespring: datasource: driver-class-name: com.mysql.cj.jdbc.Driver url: jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC username: root password: 123456 //数据库连接 main: banner-mode: offmybatis-plus: configuration: log-impl: org.apache.ibatis.logging.stdout.StdOutImpl //配置日志文件 global-config: banner: false //Mybatis-plus banner 关闭显示","categories":[],"tags":[{"name":"Mybaitis和Springboot","slug":"Mybaitis和Springboot","permalink":"http://example.com/tags/Mybaitis%E5%92%8CSpringboot/"}]},{"title":"第一个博客","slug":"第一个博客","date":"2022-10-31T10:15:09.000Z","updated":"2022-10-31T10:15:26.964Z","comments":true,"path":"2022/10/31/第一个博客/","link":"","permalink":"http://example.com/2022/10/31/%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"g好哥哥","categories":[],"tags":[{"name":"和","slug":"和","permalink":"http://example.com/tags/%E5%92%8C/"}]},{"title":"标准CRUD制作","slug":"标准CRUD制作","date":"2022-10-31T10:15:09.000Z","updated":"2022-10-31T14:48:34.593Z","comments":true,"path":"2022/10/31/标准CRUD制作/","link":"","permalink":"http://example.com/2022/10/31/%E6%A0%87%E5%87%86CRUD%E5%88%B6%E4%BD%9C/","excerpt":"","text":"增删改查 1、增 123456789101112@Autowired(required = false)UserMapper userMapper;//增@Testvoid ADD() &#123; User userA = new User(); userA.setId(100); userA.setAddr(&quot;徐州&quot;); userA.setUsername(&quot;why&quot;); userMapper.insert(userA);&#125; 2、删 1234@Test void Drop() &#123; userMapper.deleteById(2); &#125; 3、改 12345678@Test void Update() &#123; User userA = new User(); userA.setId(100); userA.setAddr(&quot;永州&quot;); userA.setUsername(&quot;王鸿雨&quot;); userMapper.updateById(userA); &#125; 4、查 1234@Testvoid Select()&#123; userMapper.selectById(1);&#125; 5、分页查询 123456@Test void testGetByPage()&#123; IPage page =new Page(1,2); userMapper.selectPage(page,null); System.out.printf(&quot;数据&quot;+page.getSize()); &#125;","categories":[],"tags":[{"name":"Mybais和Springboot","slug":"Mybais和Springboot","permalink":"http://example.com/tags/Mybais%E5%92%8CSpringboot/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-10-31T08:30:51.248Z","updated":"2022-10-31T08:30:51.248Z","comments":true,"path":"2022/10/31/hello-world/","link":"","permalink":"http://example.com/2022/10/31/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Mybaitis和Springboot","slug":"Mybaitis和Springboot","permalink":"http://example.com/tags/Mybaitis%E5%92%8CSpringboot/"},{"name":"和","slug":"和","permalink":"http://example.com/tags/%E5%92%8C/"},{"name":"Mybais和Springboot","slug":"Mybais和Springboot","permalink":"http://example.com/tags/Mybais%E5%92%8CSpringboot/"}]}